{"version":3,"sources":["Pages/MainPage.module.css","Pages/Categories.module.css","CardShow.module.css","componentes/Header.module.css","services/api.js","Pages/Categories.jsx","CardShow.jsx","Pages/MainPage.jsx","Pages/ShopCart.jsx","componentes/InputComment.jsx","Pages/CardDetails.jsx","Pages/CheckoutForm.jsx","Pages/FinishCart.jsx","componentes/Header.jsx","componentes/Nav.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","getCategories","a","fetch","result","json","data","console","log","getProductsFromCategoryAndQuery","categoryId","query","url","getProductDetail","id","Categories","categories","api","cats","setState","state","this","handleClickCat","props","className","style","container","map","key","htmlFor","type","data-testid","name","onClick","React","Component","CardShow","title","thumbnail","price","information","putElementCart","frete","to","pathname","src","alt","toFixed","MainPage","handleChange","target","productSearch","value","handleClick","param","products","productsList","results","categoryList","cartDetails","JSON","parse","localStorage","getItem","length","quantityTotal","acc","quantity","reduce","elemento","quantidade","handleClickToCart","item","addProductSelected","find","product","element","push","setItem","stringify","placeholder","onChange","containerSpace","shipping","free_shipping","ShopCart","redirectCheckout","history","calculate","total","forEach","available_quantity","filter","filterNegativeItem","removeToCart","addToCart","InputComment","radio","required","CardDetails","textClear","email","textarea","match","params","detail","comments","putCardDetails","commentsSave","coment","pictures","attributes","data-bs-ride","picture","index","secure_url","data-bs-target","data-bs-slide","aria-hidden","role","attribute","value_name","cols","rows","comment","CheckoutForm","testId","FinishCart","renderFinalPrice","prices","totalPrice","handleChangeInput","paymentMethod","validateInfos","fullName","cpf","phone","cep","address","removeItem","alert","totalProducts","Header","Nav","data-bs-toggle","aria-controls","aria-expanded","aria-label","href","aria-labelledby","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.aa39b30e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainPage_container__3jmbM\",\"containerSpace\":\"MainPage_containerSpace__1PC-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Categories_container__kbozo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardShow_container__1iPBJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__3lL5w\"};","export async function getCategories() {\n  try {\n    const url = 'https://api.mercadolibre.com/sites/MLB/categories';\n    const result = await fetch(url);\n    const data = await result.json();\n    return data;\n  } catch (e) { console.log(e); }\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  let url = '';\n  if (categoryId && query) {\n    url = `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`;\n  } else {\n    url = categoryId ? `https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}`\n      : `https://api.mercadolibre.com/sites/MLB/search?q=${query}`;\n  }\n  const result = await fetch(url);\n  const data = await result.json();\n  return data;\n}\nexport async function getProductDetail(id) {\n  const url = `https://api.mercadolibre.com/items/${id}`;\n  const result = await fetch(url);\n  const data = await result.json();\n  return data;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport style from './Categories.module.css';\n\nclass Categories extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n    };\n  }\n\n  async componentDidMount() {\n    await this.categories();\n  }\n\n  categories = async () => {\n    const cats = await api.getCategories();\n    this.setState({ categories: cats });\n  }\n\n  render() {\n    const { categories } = this.state;\n    const { handleClickCat } = this.props;\n    return (\n      <div className={ style.container }>\n        { categories.map((cats) => (\n          <div key={ cats.id }>\n            <label\n              htmlFor={ cats.id }\n            >\n              <input\n                type=\"radio\"\n                id={ cats.id }\n                data-testid=\"category\"\n                name=\"category\"\n                onClick={ () => handleClickCat(cats.id) }\n              />\n              { cats.name }\n            </label>\n          </div>\n        )) }\n      </div>\n    );\n  }\n}\n\nexport default Categories;\n\nCategories.propTypes = {\n  handleClickCat: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport style from './CardShow.module.css';\n\nexport default class CardShow extends React.Component {\n  render() {\n    const { title, thumbnail, price, id,\n      information, putElementCart, frete } = this.props;\n    return (\n      <article data-testid=\"product\" className={ `card ${style.container}` }>\n        <Link\n          key={ id }\n          data-testid=\"product-detail-link\"\n          to={ {\n            pathname: `/product/${id}`,\n            state: {\n              information,\n            },\n          } }\n        >\n          <img src={ thumbnail } className=\"card-img-top\" alt={ title } />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{ title }</h5>\n            <p className=\"card-text\">\n              R$\n              { price.toFixed(2) }\n            </p>\n            {frete\n            && <p data-testid=\"free-shipping\" className=\"card-text\">FRETE GRATIS</p>}\n          </div>\n        </Link>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={ () => putElementCart(id) }\n          data-testid=\"product-add-to-cart\"\n        >\n          Adicionar ao carrinho\n        </button>\n      </article>\n\n    );\n  }\n}\nCardShow.propTypes = {\n  title: PropTypes.string,\n  thumbnail: PropTypes.string,\n  price: PropTypes.number,\n\n}.isRequired;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Categories from './Categories';\nimport * as api from '../services/api';\nimport CardShow from '../CardShow';\n// import Header from '../componentes/Header';\nimport style from './MainPage.module.css';\n\nclass MainPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      productSearch: '',\n      productsList: [],\n      quantidade: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.cartDetails();\n  }\n\n  handleChange =({ target }) => {\n    this.setState({ productSearch: target.value });\n  }\n\n  handleClick = async (param) => {\n    const products = await api.getProductsFromCategoryAndQuery(null, param);\n    this.setState({\n      productSearch: '',\n      productsList: products.results,\n    });\n  }\n\n  handleClickCat = async (id) => {\n    const categoryList = await api.getProductsFromCategoryAndQuery(id, null);\n    this.setState({\n      productsList: categoryList.results,\n    });\n  }\n\n  cartDetails = () => {\n    const results = JSON.parse(localStorage.getItem('items'));\n    if (results && results.length > 0) {\n      const quantity = results.map((acc) => acc.quantity);\n      const quantityTotal = quantity.reduce((acc, elemento) => acc + elemento);\n      this.setState({ quantidade: quantityTotal });\n    } else {\n      this.setState({ quantidade: 0 });\n    }\n  }\n\n  handleClickToCart = (item) => {\n    let addProductSelected = JSON.parse(localStorage.getItem('items')) || [];\n    const cartProduct = addProductSelected.find((product) => product.id === item.id);\n    if (cartProduct) {\n      addProductSelected = addProductSelected.map((element) => {\n        if (element.id === item.id) {\n          element.quantity += 1;\n          return element;\n        } return element;\n      });\n    } else {\n      item.quantity = 1;\n      addProductSelected.push(item);\n    }\n    localStorage.setItem('items', JSON.stringify(addProductSelected));\n    this.cartDetails();\n  }\n\n  render() {\n    const { productSearch, productsList, quantidade } = this.state;\n    return (\n      <div className={ style.container }>\n        <header>\n          <input\n            data-testid=\"query-input\"\n            type=\"text\"\n            id=\"mainpage\"\n            placeholder=\"Buscar produtos\"\n            className=\"form-control\"\n            value={ productSearch }\n            onChange={ this.handleChange }\n          />\n          <input\n            type=\"button\"\n            data-testid=\"query-button\"\n            className=\"btn btn-primary\"\n            value=\"pesquisar\"\n            onClick={ () => this.handleClick(productSearch) }\n          />\n          <Link data-testid=\"shopping-cart-button\" to=\"/shopcart\">\n            <p data-testid=\"shopping-cart-size\">\n              <i className=\"bi bi-cart\">\n                {quantidade}\n              </i>\n            </p>\n          </Link>\n        </header>\n        {!productsList.length\n        && (\n          <p data-testid=\"home-initial-message\" className={ style.containerSpace }>\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </p>\n        )}\n\n        <nav>\n          <div>\n            <Categories handleClickCat={ this.handleClickCat } />\n          </div>\n          <section>\n            { productsList.length !== 0 && productsList.map((product) => (\n              <CardShow\n                key={ product.title }\n                title={ product.title }\n                thumbnail={ product.thumbnail }\n                price={ product.price }\n                id={ product.id }\n                frete={ product.shipping.free_shipping }\n                putElementCart={ () => this.handleClickToCart(product) }\n              />\n            ))}\n          </section>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ShopCart.css';\n\nclass ShopCart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n    };\n  }\n\n  componentDidMount() {\n    const results = JSON.parse(localStorage.getItem('items'));\n    if (results !== null) {\n      this.setState({ products: results });\n    }\n  }\n\n  redirectCheckout = () => {\n    const { history } = this.props;\n    history.push('/finishCart');\n  }\n\n  calculate = () => {\n    const { products } = this.state;\n    let total = 0;\n    products.forEach((product) => {\n      total += product.price * product.quantity;\n    });\n    return total.toFixed(2);\n  }\n\n  addToCart(item) {\n    const { products } = this.state;\n    this.setState({\n      products: products.map((element) => {\n        if (element.id === item && element.quantity !== element.available_quantity) {\n          element.quantity += 1;\n        } return element;\n      }),\n    });\n    localStorage.setItem('items', JSON.stringify(products));\n  }\n\n  removeToCart(item) {\n    const { products } = this.state;\n    this.setState({\n      products: products.map((element) => {\n        if (element.id === item) {\n          element.quantity -= 1;\n        }\n        if (element.quantity === 0) {\n          this.setState({\n            products: products.filter((acc) => acc.quantity !== 0) });\n        } return element;\n      }),\n    });\n    const filterNegativeItem = products.filter((element) => element.quantity !== 0);\n    this.setState({\n      products: filterNegativeItem },\n    localStorage.setItem('items', JSON.stringify(filterNegativeItem)));\n  }\n\n  render() {\n    const { products } = this.state;\n    return (\n      <div className=\"container-shopcart\">\n        {products.length !== 0\n          ? (\n            <div className=\"container-shopcart-item\">\n              {products.map((item) => (\n                <div\n                  key={ item.id }\n                  data-testid=\"shopping-cart-product-name\"\n                  className=\"card card-product image-container-shopcart\"\n                >\n                  <img\n                    src={ item.thumbnail }\n                    className=\"card-img-top image-product\"\n                    alt={ item.title }\n                  />\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{item.title}</h5>\n                    <h5 className=\"card-title price\">\n                      R$:\n                      { item.price }\n                    </h5>\n                    <div className=\"shopcart-buttons\">\n                      <button\n                        data-testid=\"product-decrease-quantity\"\n                        type=\"button\"\n                        onClick={ () => this.removeToCart(item.id) }\n                        className=\"btn btn-secondary btn-sm\"\n                      >\n                        -\n                      </button>\n                      <p data-testid=\"shopping-cart-product-quantity\">\n                        {item.quantity}\n                      </p>\n                      <button\n                        data-testid=\"product-increase-quantity\"\n                        type=\"button\"\n                        onClick={ () => this.addToCart(item.id) }\n                        className=\"btn btn-secondary btn-sm\"\n                      >\n                        +\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>)\n          : (<h2 data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</h2>)}\n        <div className=\"final-cart\">\n          <p>\n            Total: R$\n            {this.calculate()}\n\n          </p>\n          <button\n            data-testid=\"checkout-products\"\n            type=\"button\"\n            onClick={ this.redirectCheckout }\n            className=\"btn btn-primary btn-sm\"\n          >\n            Finalizar Carrinho\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nShopCart.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default ShopCart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputComment extends React.Component {\n  render() {\n    const { radio, handleChange } = this.props;\n    return (\n      <div className=\"comment\">\n        <label htmlFor=\"1\">\n          <input\n            type=\"radio\"\n            name=\"avaliacao\"\n            id=\"1\"\n            required\n            data-testid=\"1-rating\"\n            onChange={ handleChange }\n            value={ radio }\n          />\n          {radio < 1 ? <i className=\"bi bi-star\" /> : <i className=\"bi bi-star-fill\" />}\n        </label>\n        <label htmlFor=\"2\">\n          <input\n            type=\"radio\"\n            name=\"avaliacao\"\n            id=\"2\"\n            required\n            data-testid=\"1-rating\"\n            onChange={ handleChange }\n            value={ radio }\n          />\n          {radio < 2 ? <i className=\"bi bi-star\" /> : <i className=\"bi bi-star-fill\" />}\n        </label>\n        <label htmlFor=\"3\">\n          <input\n            type=\"radio\"\n            name=\"avaliacao\"\n            id=\"3\"\n            required\n            data-testid=\"1-rating\"\n            onChange={ handleChange }\n            value={ radio }\n          />\n          {radio < 3 ? <i className=\"bi bi-star\" /> : <i className=\"bi bi-star-fill\" />}\n        </label>\n        <label htmlFor=\"4\">\n          <input\n            type=\"radio\"\n            name=\"avaliacao\"\n            id=\"4\"\n            required\n            data-testid=\"1-rating\"\n            onChange={ handleChange }\n            value={ radio }\n          />\n          {radio < 4 ? <i className=\"bi bi-star\" /> : <i className=\"bi bi-star-fill\" />}\n\n        </label>\n        <label htmlFor=\"5\">\n          <input\n            type=\"radio\"\n            name=\"avaliacao\"\n            id=\"5\"\n            required\n            data-testid=\"1-rating\"\n            onChange={ handleChange }\n            value={ radio }\n          />\n          {radio < 5 ? <i className=\"bi bi-star\" /> : <i className=\"bi bi-star-fill\" />}\n        </label>\n      </div>\n    );\n  }\n}\n\nInputComment.propTypes = {\n  Radio: PropTypes.string,\n  handleChange: PropTypes.func,\n}.isRequired;\n\nexport default InputComment;\n","/* eslint-disable react/jsx-max-depth */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as api from '../services/api';\nimport './CardDetails.css';\nimport InputComment from '../componentes/InputComment';\n\nclass CardDetails extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      product: '',\n      email: '',\n      radio: '',\n      textarea: '',\n      comments: '',\n      quantidade: 0,\n    };\n  }\n\n  async componentDidMount() {\n    await this.product();\n    this.comments();\n    this.cartDetails();\n  }\n\n  textClear = () => {\n    this.setState({ email: '',\n      radio: '',\n      textarea: '' });\n  }\n\n  cartDetails = () => {\n    const results = JSON.parse(localStorage.getItem('items'));\n    if (results.length !== 0) {\n      const quantity = results.map((acc) => acc.quantity);\n      const quantityTotal = quantity.reduce((acc, elemento) => acc + elemento);\n      this.setState({ quantidade: quantityTotal });\n    }\n  }\n\n    product = async () => {\n      const { match: { params: { id } } } = this.props;\n      const detail = await api.getProductDetail(id);\n      this.setState({ product: detail });\n    }\n\n    comments = () => {\n      const results = JSON.parse(localStorage.getItem('comments'));\n      this.setState({ comments: results });\n    }\n\n    putCardDetails = (item) => {\n      let addProductSelected = JSON.parse(localStorage.getItem('items')) || [];\n      const cartProduct = addProductSelected.find((product) => product.id === item.id);\n      if (cartProduct) {\n        addProductSelected = addProductSelected.map((element) => {\n          if (element.id === item.id) {\n            element.quantity += 1;\n            return element;\n          } return element;\n        });\n      } else {\n        item.quantity = 1;\n        addProductSelected.push(item);\n      }\n      localStorage.setItem('items', JSON.stringify(addProductSelected));\n      this.cartDetails();\n    }\n\n    commentsSave = () => {\n      const { email, radio, textarea, product } = this.state;\n      const coment = { email,\n        radio,\n        textarea,\n        id: product.id };\n      if (localStorage.getItem('comments') !== null) {\n        const addProductSelected = JSON.parse(localStorage.getItem('comments'));\n        addProductSelected.push(coment);\n        localStorage.setItem('comments', JSON.stringify(addProductSelected));\n      } else {\n        const addProductSelected = [coment];\n        localStorage.setItem('comments', JSON.stringify(addProductSelected));\n      }\n      this.comments();\n      this.textClear();\n    }\n\n    handleChange =({ target }) => {\n      const { type, value, id } = target;\n      return type === 'radio' ? this.setState({ [type]: id })\n        : this.setState({ [type]: value });\n    }\n\n    render() {\n      const { product, email, radio, textarea, comments, quantidade } = this.state;\n      const { price } = product;\n      const { pictures, attributes } = product;\n\n      return (\n        <div className=\"CardDetail-container\">\n          <div>\n            <Link data-testid=\"shopping-cart-button\" to=\"/shopcart\">\n              <p data-testid=\"shopping-cart-size\">\n                <i className=\"bi bi-cart\">{quantidade}</i>\n              </p>\n            </Link>\n          </div>\n          <div className=\"slides-container\">\n            <p data-testid=\"product-detail-name\">{product.title}</p>\n            { pictures\n              ? (\n                <div\n                  id=\"carouselExampleControls\"\n                  className=\"carousel slide\"\n                  data-bs-ride=\"carousel\"\n                >\n                  <div className=\"carousel-inner\">\n                    { pictures.map((picture, index) => (\n                      <div\n                        key={ index }\n                        className={ `carousel-item ${index === 0 ? 'active' : ''}` }\n                      >\n                        <img\n                          src={ picture.secure_url }\n                          className=\"d-block w-100\"\n                          alt=\"...\"\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  <button\n                    className=\"carousel-control-prev\"\n                    type=\"button\"\n                    data-bs-target=\"#carouselExampleControls\"\n                    data-bs-slide=\"prev\"\n                  >\n                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\n                    <span className=\"visually-hidden\">Previous</span>\n                  </button>\n                  <button\n                    className=\"carousel-control-next\"\n                    type=\"button\"\n                    data-bs-target=\"#carouselExampleControls\"\n                    data-bs-slide=\"next\"\n                  >\n                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\" />\n                    <span className=\"visually-hidden\">Next</span>\n                  </button>\n                </div>)\n              : (\n                <div className=\"spinner-border text-secondary\" role=\"status\">\n                  <span className=\"visually-hidden\">Loading...</span>\n                </div>)}\n            <p>\n              R$:\n              { price && price.toFixed(2)}\n            </p>\n            {product.shipping?.free_shipping\n            && <p data-testid=\"free-shipping\">FRETE GRATIS</p>}\n            <button\n              type=\"submit\"\n              onClick={ () => this.putCardDetails(product) }\n              data-testid=\"product-detail-add-to-cart\"\n              className=\"btn btn-primary\"\n            >\n              Adicionar ao carrinho\n            </button>\n            <div className=\"specs\">\n              <div className=\"attributes-container\">\n                <p>Atributos:</p>\n                {attributes\n            && attributes.map((attribute, index) => (\n              <div key={ index }>\n                <p>\n                  {attribute.name}\n                  :\n                  {attribute.value_name}\n                </p>\n              </div>\n            ))}\n              </div>\n              <form>\n                <label htmlFor=\"emailInput\">\n                  Email\n                  <input\n                    type=\"email\"\n                    name=\"\"\n                    required\n                    id=\"emailInput\"\n                    className=\"form-control\"\n                    data-testid=\"product-detail-email\"\n                    value={ email }\n                    onChange={ this.handleChange }\n                  />\n                </label>\n                <InputComment radio={ radio } handleChange={ this.handleChange } />\n                <div>\n                  <label htmlFor=\"comentario\">\n                    Avaliações\n                    <textarea\n                      name=\"\"\n                      id=\"comentario\"\n                      className=\"form-control\"\n                      cols=\"30\"\n                      required\n                      rows=\"10\"\n                      value={ textarea }\n                      data-testid=\"product-detail-evaluation\"\n                      onChange={ this.handleChange }\n                    />\n                  </label>\n                </div>\n                <button\n                  type=\"button\"\n                  data-testid=\"submit-review-btn\"\n                  onClick={ () => this.commentsSave() }\n                >\n                  Avaliar\n                </button>\n                {comments && comments.map((comment, index) => {\n                  let coment;\n                  if (comment.id === product.id) {\n                    coment = (\n                      <div key={ index }>\n                        <p>{comment.email}</p>\n                        <p>{comment.radio}</p>\n                        <p>{comment.textarea}</p>\n                      </div>\n                    );\n                  } return coment;\n                })}\n              </form>\n            </div>\n          </div>\n        </div>\n      );\n    }\n}\nCardDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n\nexport default CardDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass CheckoutForm extends React.Component {\n  render() {\n    const { testId, placeholder, id, onChange } = this.props;\n    return (\n      <label htmlFor={ id } className=\"form-label\">\n        { placeholder }\n        <input\n          data-testid={ testId }\n          type=\"text\"\n          id={ id }\n          placeholder={ placeholder }\n          onChange={ onChange }\n          className=\"form-control\"\n        />\n      </label>\n    );\n  }\n}\nCheckoutForm.propTypes = {\n  testId: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default CheckoutForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckoutForm from './CheckoutForm';\nimport './FinishCart.css';\n\nexport default class FinishCart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalPrice: 0,\n      fullName: '',\n      email: '',\n      cpf: '',\n      phone: '',\n      cep: '',\n      address: '',\n      paymentMethod: '',\n      totalProducts: '',\n    };\n  }\n\n  componentDidMount() {\n    const results = JSON.parse(localStorage.getItem('items'));\n    if (results !== null) {\n      this.setState({ totalProducts: results }, this.renderFinalPrice(results));\n    }\n  }\n\n      renderFinalPrice = (products) => {\n        const prices = products.map((acc) => acc.price * acc.quantity);\n        if (prices.length > 0) {\n          const totalPrice = prices.reduce((acc, elemento) => acc + elemento);\n          this.setState({ totalPrice: totalPrice.toFixed(2) });\n        } else {\n          this.setState({ totalPrice: 0.00 });\n        }\n      }\n\n      handleChange = ({ target }) => {\n        const { id, value } = target;\n        this.setState({\n          [id]: value,\n        });\n      }\n\n      handleChangeInput = ({ target }) => {\n        const { value } = target;\n        this.setState({\n          paymentMethod: value,\n        });\n      }\n\n      validateInfos = () => {\n        const { fullName, email, cpf, phone, cep, address, paymentMethod } = this.state;\n        if (\n          fullName.length > 0\n          && email.length > 0\n          && cpf.length > 0\n          && phone.length > 0\n          && cep.length > 0\n          && address.length > 0\n          && paymentMethod.length > 0\n        ) {\n          this.setState({\n            fullName: '',\n            email: '',\n            cpf: '',\n            phone: '',\n            cep: '',\n            address: '',\n            paymentMethod: '',\n          });\n          localStorage.removeItem('items');\n          const { history } = this.props;\n          history.push('/');\n        } else {\n          alert('Preencha todos os campos.');\n        }\n      }\n\n      render() {\n        const { totalPrice } = this.state;\n        return (\n          <div className=\"container-finish\">\n            <form className=\"mb-3 form-finish\">\n              <CheckoutForm\n                testId=\"checkout-fullname\"\n                placeholder=\"Nome Completo\"\n                id=\"fullName\"\n                onChange={ this.handleChange }\n              />\n              <CheckoutForm\n                testId=\"checkout-email\"\n                placeholder=\"E-mail\"\n                id=\"email\"\n                onChange={ this.handleChange }\n              />\n              <CheckoutForm\n                testId=\"checkout-cpf\"\n                placeholder=\"CPF\"\n                id=\"cpf\"\n                onChange={ this.handleChange }\n              />\n              <CheckoutForm\n                testId=\"checkout-phone\"\n                placeholder=\"Telefone\"\n                id=\"phone\"\n                onChange={ this.handleChange }\n              />\n              <CheckoutForm\n                testId=\"checkout-cep\"\n                placeholder=\"CEP\"\n                id=\"cep\"\n                onChange={ this.handleChange }\n              />\n              <CheckoutForm\n                testId=\"checkout-address\"\n                placeholder=\"Endereço\"\n                id=\"address\"\n                onChange={ this.handleChange }\n              />\n            </form>\n            <div className=\"price-finishcart\">\n              <h2>Parcelamento</h2>\n              <label htmlFor=\"price\">\n                R$:\n                {totalPrice}\n                <select name=\"\" className=\"form-select\" id=\"price\">\n                  <option value=\"1\">\n                    1 x\n                    {' '}\n                    R$:\n                    {totalPrice}\n                  </option>\n                  <option value=\"2\">\n                    2 x\n                    {' '}\n                    R$:\n                    {(totalPrice / 2).toFixed(2)}\n                  </option>\n                  <option value=\"3\">\n                    3 x\n                    {' '}\n                    R$:\n                    {(totalPrice / 3).toFixed(2)}\n                  </option>\n                  <option value=\"4\">\n                    4 x\n                    {' '}\n                    R$:\n                    {(totalPrice / 4).toFixed(2)}\n                  </option>\n                  <option value=\"5\">\n                    5 x\n                    {' '}\n                    R$:\n                    {(totalPrice / 5).toFixed(2)}\n                  </option>\n                </select>\n              </label>\n            </div>\n            <div className=\"payment\">\n              <h2>Método de pagamento</h2>\n              <div className=\"input-finish\">\n                <label htmlFor=\"boleto\">\n                  <input\n                    type=\"radio\"\n                    id=\"boleto\"\n                    value=\"boleto\"\n                    name=\"pay\"\n                    onChange={ this.handleChangeInput }\n                  />\n                  Boleto\n                </label>\n                <h2>Cartão de Crédito</h2>\n                <label htmlFor=\"visa\" onChange={ this.handleChangeInput }>\n                  <input\n                    type=\"radio\"\n                    id=\"visa\"\n                    value=\"visa\"\n                    name=\"pay\"\n                    onChange={ this.handleChangeInput }\n                  />\n                  Visa\n                </label>\n                <label htmlFor=\"mastercard\" onChange={ this.handleChangeInput }>\n                  <input\n                    type=\"radio\"\n                    id=\"mastercard\"\n                    value=\"mastercard\"\n                    name=\"pay\"\n                    onChange={ this.handleChangeInput }\n                  />\n                  Mastercard\n                </label>\n                <label htmlFor=\"elo\">\n                  <input\n                    type=\"radio\"\n                    id=\"elo\"\n                    value=\"elo\"\n                    name=\"pay\"\n                    onChange={ this.handleChangeInput }\n                  />\n                  Elo\n                </label>\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn btn-warning\"\n                onClick={ this.validateInfos }\n              >\n                Comprar\n\n              </button>\n            </div>\n          </div>\n        );\n      }\n}\nFinishCart.propTypes = {\n  // totalProducts: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport style from './Header.module.css';\n\nexport default class Header extends React.Component {\n  // constructor() {\n  //   super();\n  // }\n\n  render() {\n    return (\n      <div className={ style.container }>\n        {/* <Link to=\"/\"> */}\n        {/* <img src=\"https://pbs.twimg.com/profile_images/1412038025098444800/Kx6Wj0hl_400x400.jpg\" alt=\"carrinho\" /> */}\n        {/* <p>promoção dos dias das mães</p> */}\n        {/* </Link> */}\n      </div>\n    );\n  }\n}\n","/* eslint-disable react/jsx-max-depth */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n// import Categories from '../Pages/Categories';\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">Home</Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNavDarkDropdown\"\n          aria-controls=\"navbarNavDarkDropdown\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDarkDropdown\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item dropdown\">\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDarkDropdownMenuLink\"\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                Dropdown\n              </a>\n              <ul\n                className=\"dropdown-menu dropdown-menu-dark\"\n                aria-labelledby=\"navbarDarkDropdownMenuLink\"\n              >\n                <li>\n                  <Link className=\"dropdown-item\" to=\"/shopcart\">Carrinho</Link>\n                </li>\n                <li>\n                  <Link\n                    className=\"dropdown-item\"\n                    to=\"/finishCart\"\n                  >\n                    Finalizar Carrinho\n\n                  </Link>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport MainPage from './Pages/MainPage';\nimport ShopCart from './Pages/ShopCart';\nimport CardDetails from './Pages/CardDetails';\nimport FinishCart from './Pages/FinishCart';\nimport Header from './componentes/Header';\nimport Nav from './componentes/Nav';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <HashRouter>\n          <Header />\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={ MainPage } />\n            {/* <Route\n              exact\n              path=\"/\"\n              render={ (props) => (\n                <MainPage { ...props }>\n                  <Header />\n                </MainPage>\n              ) }\n            /> */}\n            <Route path=\"/shopcart\" component={ ShopCart } />\n            <Route path=\"/product/:id\" component={ CardDetails } />\n            <Route path=\"/finishCart\" component={ FinishCart } />\n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}